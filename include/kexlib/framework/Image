#pragma once

#include <istream>
#include <framework/Pixmap>

namespace kex {
namespace gfx {

struct ImageData
{
    virtual ~ImageData();

    virtual Pixmap_sp data() const = 0;
};

struct ImageType
{
    ImageType();

    virtual bool detect(std::istream &stream) = 0;

    virtual std::shared_ptr<ImageData> construct(std::istream &stream) = 0;
};

class Image
{
    std::shared_ptr<ImageData> mImage;

public:
    Image();

    Image(std::istream &stream);

    Pixmap_sp data() const;

    static void add_type(ImageType *type);
};

} // namespace gfx
} // namespace kex

